apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-server
  namespace: mlflow
  annotations:
    app.openshift.io/vcs-uri: github.com/strangiato/mlflow-server
  labels:
    helm.sh/chart: mlflow-server-0.6.2
    app.kubernetes.io/name: mlflow-server
    app.kubernetes.io/instance: mlflow-server
    app.kubernetes.io/version: "2.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mlflow-server
      app.kubernetes.io/instance: mlflow-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlflow-server
        app.kubernetes.io/instance: mlflow-server
    spec:
      serviceAccountName: mlflow-server
      securityContext:
        {}
      containers:
        - name: mlflow-server
          securityContext:
            {}
          image: "quay.io/troyer/mlflow-server:2.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: mlflow-server
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: mlflow-server
          readinessProbe:
            httpGet:
              path: /health
              port: mlflow-server
            initialDelaySeconds: 30
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: mlflow-server
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: mlflow-server
                  key: AWS_SECRET_ACCESS_KEY
            - name: MLFLOW_S3_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: mlflow-server
                  key: BUCKET_NAME
            - name: MLFLOW_S3_ENDPOINT_URL
              valueFrom:
                configMapKeyRef:
                  name: mlflow-server
                  key: S3_ENDPOINT_URL
            - name: AWS_CA_BUNDLE
              value: /run/secrets/kubernetes.io/serviceaccount/service-ca.crt
            - name: PGBOUNCE_HOST
              valueFrom:
                secretKeyRef:
                  name: mlflow-server-pguser-mlflow-server
                  key: pgbouncer-host
            - name: PGBOUNCE_PORT
              valueFrom:
                secretKeyRef:
                  name: mlflow-server-pguser-mlflow-server
                  key: pgbouncer-port
            - name: MLFLOW_DATABASE_HOST
              value: $(PGBOUNCE_HOST):$(PGBOUNCE_PORT)
            - name: MLFLOW_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: mlflow-server-pguser-mlflow-server
                  key: dbname
            - name: MLFLOW_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mlflow-server-pguser-mlflow-server
                  key: password
            - name: MLFLOW_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mlflow-server-pguser-mlflow-server
                  key: user
            - name: MLFLOW_PORT
              value: '8080'
          resources:
            {}
        - name: oauth-proxy
          image: "registry.redhat.io/openshift4/ose-oauth-proxy:v4.13"
          imagePullPolicy:
          ports:
            - containerPort: 8443
              name: oauth-proxy
          args:
            - --https-address=:8443
            - --provider=openshift
            - --openshift-sar={"namespace":"default","resource":"services","resourceName":"mlflow-server","verb":"get"}
            - --openshift-service-account=mlflow-server
            - --upstream=http://localhost:8080
            - --tls-cert=/etc/tls/private/tls.crt
            - --tls-key=/etc/tls/private/tls.key
            - --cookie-secret=SECRET
          volumeMounts:
            - mountPath: /etc/tls/private
              name: oauth-tls
          livenessProbe:
            httpGet:
              path: /oauth/healthz
              port: 8443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /oauth/healthz
              port: 8443
              scheme: HTTPS
          resources:
            {}
      volumes:
        - name: oauth-tls
          secret:
            secretName: mlflow-server-tls
